@use '../abstracts/functions';
@use 'sass:map';

/**
 * * Контейнер содержимого
 */

// * размеры модифицированных контейнеров
$container-default-size: 1200px;
$container-modifications-size: (
	xsmall: 750px,
	small: 900px,
	large: 1400px,
	xlarge: 1600px,
	expand: none
);
$container-modifications-margin: (
	expand-start: 0,
	expand-end: 0,
);

.container {

	margin-block-end: 1em;
	background-color: lightgray;
	border: 2px solid gray;
	padding: 1rem 2rem;

	// * динамический размер отступа у контейнера
	// * min viewport: 960px / 60rem
	// * max viewport: 1600px / 100rem
	// #    min  max
	// * p: 16 / 32
	// ? https://clamp.font-size.app/?config=eyJyb290IjoiMTYiLCJtaW5XaWR0aCI6Ijk2MHB4IiwibWF4V2lkdGgiOiIxNjAwcHgiLCJtaW5Gb250U2l6ZSI6IjE2cHgiLCJtYXhGb250U2l6ZSI6IjMycHgifQ%3D%3D

	--container-padding: #{functions.dynamic-clamp(1, 2, 60, 100)};

	$this: &;

	display: flow-root;
	margin-inline: auto;

	padding-inline: var(--container-padding);

	// * все дочерние контейнеры
	// &:has(#{$this}) {
	// 	padding-inline: var(--container-padding);
	// }

	// * формируем красивую запись на основе списка модификаторов:
	// * .container:not(:where(.container--xsmall,.container--small,.container--large,.container--xlarge))
	$modification-list: '';
	@each $name, $size in $container-modifications-size {
		// * получаем текущий индекс записи массива
		$index: index(map-keys($container-modifications-size), $name);
		// * формируем запись
		$modification-list: $modification-list + $this + '--' + $name;
		// * если текущий индекс записи не последний, добавляем запятую
		@if $index < length($container-modifications-size) {
			$modification-list: $modification-list + ', ';
		}
	}

	// * размер контейнера по умолчанию
	&:not(:is(#{$modification-list})) {
		max-width: $container-default-size;
		@each $expand, $width in $container-modifications-margin {
			&#{$this}--#{$expand} {
				max-width: unquote('calc(50% + (#{$container-default-size} / 2))');
			}
		}
	}

	// * устанавливаем размер для всех модификаций контейнера
	@each $name, $size in $container-modifications-size {
		&--#{$name} {
			max-width: #{$size};

			// * прилипший контейнеры без 1 отступа с краю
			@each $expand, $width in $container-modifications-margin {
				&#{$this}--#{$expand} {
					max-width: unquote('calc(50% + (#{map.get($container-modifications-size, $name)} / 2))');
				}
			}
		}
	}

	&--expand {
		&-start {
			&:not(#{$this}--expand) {
				margin-inline-start: 0;
			}
		}
		&-end {
			&:not(#{$this}--expand) {
				margin-inline-end: 0;
			}
		}
	}
}